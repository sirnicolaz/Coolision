<?php

/**
 * Magictoolbox product list template for Magento store. 
 * Allow use MagicTools on product list page. 
 * @mail support@magictoolbox.com
 */
 
$tool = & $GLOBALS["magictoolbox"]["magiczoom"];

if(!defined('__MAGICZOOM_INCLUDED')) {
    echo $tool->addonsTemplate($this->getSkinUrl('images'));
    define('__MAGICZOOM_INCLUDED',1);
}

ob_start();
require(dirname(__FILE__) . '/list_original.phtml');
$contents = ob_get_contents();
ob_end_clean();

if($_productCollection->count() && $tool->params->checkValue('use_effect_on_category_page', 'Yes')) {

    foreach ($_productCollection as $_product) {
        
        $_product = Mage::getModel('catalog/product')->load($_product->getId());
        
        if($_product->getImage() && $_product->getImage() != 'no_selection') {
            $title = $this->htmlEscape($_product->getName());
            $description = $this->htmlEscape($_product->getDescription());
            $shortDescription = $this->htmlEscape($_product->getShortDescription());
            if($tool->params->checkValue("caption_source", "Short description")) {
                $description = $shortDescription;
                $tool->params->set("caption_source", "Description");
            }
            list($img, $thumb) = magicToolboxResizer($_product, 'image', $tool->params->getValue("thumb_size"));
            $onclick = 'onclick="document.location.href = \'' . $_product->getProductUrl() . '\';" ';

            $id = $_product->getId();
            $html = $tool->template(compact("id", "title", "description", "img", "thumb"));
            $html = preg_replace('/^<a /is', '<a ' . $onclick, $html);

            if ($tool->params->checkValue('show_selectors_on_category_page', 'Yes')) {
                $gallery = Mage::getModel('catalog/product')->load($id)->getMediaGalleryImages();
                foreach($gallery  as $_image) {
                    list($img, $medium) = magicToolboxResizer($_product, 'image', $tool->params->getValue("thumb_size"), $_image->getFile());
                    list($img, $thumb) = magicToolboxResizer($_product, 'image', $tool->params->getValue("selector_size"), $_image->getFile());
                    $title = $this->htmlEscape($_image->getLabel());
                    $a = $tool->subTemplate(compact("id", "img", "thumb", "medium", "title"));
                    $html .= $a;
                }
            }

            $pattern = '<a[^>]+href=\"' . preg_quote($_product->getProductUrl(), '/') . '\"[^>]*>\s*<img[^>]+\/>\s*<\/a>';
            $pattern = '/' . $pattern . '/is';
            $contents_new = preg_replace($pattern, $html, $contents);
            if($contents_new == $contents) {
                $hash = preg_replace('/^.*?image\/([a-z0-9]+)\/.*$/is', '$1', $img);
                $name = preg_replace('/^.*?image\/([a-z0-9]+)\/.*?\/([^\/]+)$/is', '$2', $img);
                $pattern = '<img[^>]+src=\"[^\"]*\/' . preg_quote($hash, '/') . '\/[^\"]*\/' . preg_quote($name, '/') . '\"[^>]*\/>';
                $pattern = '/' . $pattern . '/is';
                $contents = preg_replace($pattern, $html, $contents);
            } else {
                $contents = $contents_new;
            }
        }
    }
}

echo $contents;

?>